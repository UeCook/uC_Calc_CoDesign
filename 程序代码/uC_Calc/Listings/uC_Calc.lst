C51 COMPILER V9.59.0.0   UC_CALC                                                           11/08/2024 09:46:51 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE UC_CALC
OBJECT MODULE PLACED IN .\Objects\uC_Calc.obj
COMPILER INVOKED BY: C:\Program Files\Keil_C51\C51\BIN\C51.EXE uC_Calc.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\uC_Calc.lst) TABS(2) OBJECT(.\Objects\uC_Calc.obj)

line level    source

   1          #include <reg51.H>
   2          #include<intrins.h>
   3          #include<stdio.h>
   4          #include<string.h>
   5          #include<math.h>
   6          
   7          sbit RS = P2^7; 
   8          sbit RW = P2^6; 
   9          sbit E  = P2^5; 
  10          
  11          #define Data  P0
  12          
  13          float num1;
  14          float num2;
  15          char yun_flag = ' ';
  16          char key_last;
  17          char sqrt_flag;
  18          unsigned long pos_flag = 1;
  19          char neg_flag;
  20          char data c_num1[15] = " ";
  21          char data c_num2[15] = " ";
  22          char error;
  23          char len;
  24          
  25          void DelayUs(unsigned char us)
  26          {
  27   1          unsigned char uscnt;
  28   1          uscnt = us >> 1;
  29   1          while (--uscnt)
  30   1          {
  31   2          }
  32   1      }
  33          
  34          void DelayMs(unsigned char ms)
  35          {
  36   1          while (--ms)
  37   1          {
  38   2              DelayUs(250);
  39   2              DelayUs(250);
  40   2              DelayUs(250);
  41   2              DelayUs(250);
  42   2          }
  43   1      }
  44          
  45          void WriteCommand(unsigned char c)
  46          {
  47   1          DelayMs(5);
  48   1          RS = 0;
  49   1          RW = 0;
  50   1          E = 1;
  51   1          _nop_();
  52   1          E = 1;
  53   1          Data = c;
  54   1          E = 0;
C51 COMPILER V9.59.0.0   UC_CALC                                                           11/08/2024 09:46:51 PAGE 2   

  55   1          DelayMs(5);
  56   1      }
  57          
  58          void WriteData(unsigned char c)
  59          {
  60   1          DelayMs(5);
  61   1          RS = 1;
  62   1          E = 0;
  63   1          RW = 0;
  64   1          _nop_();
  65   1          E = 1;
  66   1          Data = c;
  67   1          E = 0;
  68   1          RS = 0;
  69   1          DelayMs(5);
  70   1      }
  71          
  72          void ShowChar(unsigned char pos, unsigned char c)
  73          {
  74   1          unsigned char p;
  75   1          if (pos >= 0x10)
  76   1          {
  77   2              p = pos + 0xb0;
  78   2          }
  79   1          else
  80   1          {
  81   2              p = pos + 0x80;
  82   2          }
  83   1          WriteCommand(p);
  84   1          WriteData(c);
  85   1      }
  86          
  87          void ShowString(unsigned char line, char *ptr)
  88          {
  89   1          unsigned char l, i;
  90   1          l = line << 4;
  91   1          for (i = 0; *(ptr + i) != '\0'; i++)
  92   1          {
  93   2              ShowChar(l++, *(ptr + i));
  94   2          }
  95   1      }
  96          
  97          void InitLcd(void)
  98          {
  99   1          DelayMs(15);
 100   1          WriteCommand(0x38);
 101   1          DelayMs(10);
 102   1          WriteCommand(0x38);
 103   1          DelayMs(10);
 104   1          WriteCommand(0x38);
 105   1          DelayMs(10);
 106   1          WriteCommand(0x06);
 107   1          DelayMs(10);
 108   1          WriteCommand(0x0c);
 109   1          DelayMs(10);
 110   1          WriteCommand(0x01);
 111   1          DelayMs(10);
 112   1      }
 113          
 114          char scan(void)
 115          {
 116   1          char h_data, l_data, i, key_num;
C51 COMPILER V9.59.0.0   UC_CALC                                                           11/08/2024 09:46:51 PAGE 3   

 117   1          P2 = P2 & 0XE0;
 118   1          P1 = P1 | 0X0F;
 119   1          while ((P1 | 0xf0) == 0xff)
 120   1          {
 121   2              while ((P1 | 0xf0) == 0xff)
 122   2              {
 123   3              }
 124   2              DelayMs(10);
 125   2          }
 126   1          l_data = ~(P1 | 0xf0);
 127   1          P2 = P2 | 0X1F;
 128   1          P1 = P1 & 0XF0;
 129   1          h_data = ~(P2 | 0xe0);
 130   1          for (i = 0; i <= 4; i++)
 131   1          {
 132   2              if (h_data == 1)
 133   2              {
 134   3                  break;
 135   3              }
 136   2              h_data = h_data >> 1;
 137   2          }
 138   1          h_data = i;
 139   1          for (i = 1; i <= 4; i++)
 140   1          {
 141   2              if (l_data == 1)
 142   2              {
 143   3                  break;
 144   3              }
 145   2              l_data = l_data >> 1;
 146   2          }
 147   1          l_data = i;
 148   1          key_num = h_data * 4 + l_data;
 149   1      
 150   1          P2 = P2 & 0XE0;
 151   1          P1 = P1 | 0X0F;
 152   1          while ((P1 | 0xf0) != 0xff)
 153   1          {
 154   2              while ((P1 | 0xf0) != 0xff)
 155   2              {
 156   3              }
 157   2              DelayMs(10);
 158   2          }
 159   1          return key_num;
 160   1      }
 161          
 162          void float_to_char(float a, char *p)
 163          {
 164   1          char i, flag, length;
 165   1          flag = 0;
 166   1          sprintf(p, "%f", a);
 167   1          length = strlen(p);
 168   1          for (i = 0; i < length; i++)
 169   1          {
 170   2              if (*(p + i) == '.')
 171   2              {
 172   3                  flag = 1;
 173   3              }
 174   2          }
 175   1          if (flag == 1)
 176   1          {
 177   2              for (i = length - 1; i >= 0; i--)
 178   2              {
C51 COMPILER V9.59.0.0   UC_CALC                                                           11/08/2024 09:46:51 PAGE 4   

 179   3                  if (*(p + i) == '.')
 180   3                  {
 181   4                      *(p + i) = '\0';
 182   4                      break;
 183   4                  }
 184   3                  if (*(p + i) != '0')
 185   3                  {
 186   4                      *(p + i + 1) = '\0';
 187   4                      break;
 188   4                  }
 189   3              }
 190   2          }
 191   1      }
 192          
 193          void refresh(void)
 194          {
 195   1          char length, i, j;
 196   1          char dot;
 197   1          dot = 0;
 198   1      
 199   1          float_to_char(num2, c_num2);
 200   1          length = strlen(c_num2);
 201   1          for (i = 0, j = 0; i < length; i++)
 202   1          {
 203   2              if (c_num2[i] == '.')
 204   2              {
 205   3                  dot = 1;
 206   3              }
 207   2              if (dot == 1)
 208   2              {
 209   3                  j++;
 210   3              }
 211   2          }
 212   1          if (j < len)
 213   1          {
 214   2              if (dot == 1)
 215   2              {
 216   3                  for (i = length; i < (length + len - j); i++)
 217   3                  {
 218   4                      c_num2[i] = '0';
 219   4                  }
 220   3                  c_num2[i] = '\0';
 221   3              }
 222   2              else
 223   2              {
 224   3                  c_num2[length] = '.';
 225   3                  if (len - j > 1)
 226   3                  {
 227   4                      for (i = length + 1; i < (length + len - j); i++)
 228   4                      {
 229   5                          c_num2[i] = '0';
 230   5                      }
 231   4                  }
 232   3                  c_num2[length + len - j] = '\0';
 233   3              }
 234   2          }
 235   1      
 236   1          if (neg_flag == 1)
 237   1          {
 238   2              length = strlen(c_num2);
 239   2              for (i = length - 1; i >= 0; i--)
 240   2              {
C51 COMPILER V9.59.0.0   UC_CALC                                                           11/08/2024 09:46:51 PAGE 5   

 241   3                  c_num2[i + 1] = c_num2[i];
 242   3              }
 243   2              c_num2[length + 1] = '\0';
 244   2              c_num2[0] = '-';
 245   2          }
 246   1      
 247   1          if (sqrt_flag == 1)
 248   1          {
 249   2              length = strlen(c_num2);
 250   2              for (i = length - 1; i >= 0; i--)
 251   2              {
 252   3                  c_num2[i + 1] = c_num2[i];
 253   3              }
 254   2              c_num2[length + 1] = '\0';
 255   2              c_num2[0] = 0xe8;
 256   2          }
 257   1      
 258   1          if (error == 0)
 259   1          {
 260   2              float_to_char(num1, c_num1);
 261   2              WriteCommand(0x01);
 262   2              ShowString(0, c_num1);
 263   2              ShowString(1, c_num2);
 264   2              ShowChar(15, yun_flag);
 265   2          }
 266   1          else
 267   1          {
 268   2              WriteCommand(0x01);
 269   2              ShowString(0, "error!!!");
 270   2          }
 271   1      }
 272          
 273          void operation1(char keynum)
 274          {
 275   1          if (key_last == 1)
 276   1          {
 277   2              if (neg_flag == 1)
 278   2              {
 279   3                  num2 = -num2;
 280   3              }
 281   2              if (sqrt_flag == 1)
 282   2              {
 283   3                  if (num2 >= 0)
 284   3                  {
 285   4                      num2 = sqrt(num2);
 286   4                  }
 287   3                  else
 288   3                  {
 289   4                      error = 1;
 290   4                  }
 291   3              }
 292   2              if (yun_flag == '+')
 293   2              {
 294   3                  num1 = num1 + num2;
 295   3              }
 296   2              if (yun_flag == '-')
 297   2              {
 298   3                  num1 = num1 - num2;
 299   3              }
 300   2              if (yun_flag == '*')
 301   2              {
 302   3                  num1 = num1 * num2;
C51 COMPILER V9.59.0.0   UC_CALC                                                           11/08/2024 09:46:51 PAGE 6   

 303   3              }
 304   2              if (yun_flag == '/')
 305   2              {
 306   3                  if (num2 != 0)
 307   3                  {
 308   4                      num1 = num1 / num2;
 309   4                  }
 310   3                  else
 311   3                  {
 312   4                      error = 1;
 313   4                  }
 314   3              }
 315   2              if (yun_flag == ' ' && num2 != 0)
 316   2              {
 317   3                  num1 = num2;
 318   3              }
 319   2              num2 = 0;
 320   2              sqrt_flag = 0;
 321   2              neg_flag = 0;
 322   2              pos_flag = 1;
 323   2          }
 324   1          if (keynum == 4)
 325   1          {
 326   2              yun_flag = '+';
 327   2          }
 328   1          if (keynum == 8)
 329   1          {
 330   2              yun_flag = '-';
 331   2          }
 332   1          if (keynum == 12)
 333   1          {
 334   2              yun_flag = '*';
 335   2          }
 336   1          if (keynum == 16)
 337   1          {
 338   2              yun_flag = '/';
 339   2          }
 340   1          len = 0;
 341   1          key_last = 0;
 342   1          refresh();
 343   1      }
 344          
 345          void operation2(char keynum)
 346          {
 347   1          float Data1;
 348   1      
 349   1          if (keynum == 1)
 350   1          {
 351   2              Data1 = 7;
 352   2          }
 353   1          if (keynum == 2)
 354   1          {
 355   2              Data1 = 8;
 356   2          }
 357   1          if (keynum == 3)
 358   1          {
 359   2              Data1 = 9;
 360   2          }
 361   1          if (keynum == 5)
 362   1          {
 363   2              Data1 = 4;
 364   2          }
C51 COMPILER V9.59.0.0   UC_CALC                                                           11/08/2024 09:46:51 PAGE 7   

 365   1          if (keynum == 6)
 366   1          {
 367   2              Data1 = 5;
 368   2          }
 369   1          if (keynum == 7)
 370   1          {
 371   2              Data1 = 6;
 372   2          }
 373   1          if (keynum == 9)
 374   1          {
 375   2              Data1 = 1;
 376   2          }
 377   1          if (keynum == 10)
 378   1          {
 379   2              Data1 = 2;
 380   2          }
 381   1          if (keynum == 11)
 382   1          {
 383   2              Data1 = 3;
 384   2          }
 385   1          if (keynum == 13)
 386   1          {
 387   2              Data1 = 0;
 388   2          }
 389   1          if (pos_flag == 1)
 390   1          {
 391   2              num2 = num2 * 10 + Data1;
 392   2          }
 393   1          else
 394   1          {
 395   2              num2 = num2 + (Data1 / pos_flag);
 396   2              pos_flag = pos_flag * 10;
 397   2              len++;
 398   2          }
 399   1          key_last = 1;
 400   1          refresh();
 401   1      }
 402          
 403          void operation3(void)
 404          {
 405   1          if (pos_flag == 1)
 406   1          {
 407   2              pos_flag = pos_flag * 10;
 408   2              len++;
 409   2          }
 410   1          key_last = 1;
 411   1          refresh();
 412   1      }
 413          
 414          void operation4(void)
 415          {
 416   1          if (neg_flag == 1)
 417   1          {
 418   2              num2 = -num2;
 419   2          }
 420   1          if (sqrt_flag == 1)
 421   1          {
 422   2              if (num2 >= 0)
 423   2              {
 424   3                  num2 = sqrt(num2);
 425   3              }
 426   2              else
C51 COMPILER V9.59.0.0   UC_CALC                                                           11/08/2024 09:46:51 PAGE 8   

 427   2              {
 428   3                  error = 1;
 429   3              }
 430   2          }
 431   1          if (yun_flag == '+')
 432   1          {
 433   2              num1 = num1 + num2;
 434   2          }
 435   1          if (yun_flag == '-')
 436   1          {
 437   2              num1 = num1 - num2;
 438   2          }
 439   1          if (yun_flag == '*')
 440   1          {
 441   2              num1 = num1 * num2;
 442   2          }
 443   1          if (yun_flag == '/')
 444   1          {
 445   2              if (num2 != 0)
 446   2              {
 447   3                  num1 = num1 / num2;
 448   3              }
 449   2              else
 450   2              {
 451   3                  error = 1;
 452   3              }
 453   2          }
 454   1          if (yun_flag == ' ' && num2 != 0)
 455   1          {
 456   2              num1 = num2;
 457   2          }
 458   1          num2 = 0;
 459   1          sqrt_flag = 0;
 460   1          neg_flag = 0;
 461   1          pos_flag = 1;
 462   1          yun_flag = ' ';
 463   1          len = 0;
 464   1          key_last = 0;
 465   1          refresh();
 466   1      }
 467          
 468          void operation5(void)
 469          {
 470   1          num1 = 0;
 471   1          num2 = 0;
 472   1          sqrt_flag = 0;
 473   1          neg_flag = 0;
 474   1          pos_flag = 1;
 475   1          yun_flag = ' ';
 476   1          error = 0;
 477   1          len = 0;
 478   1          key_last = 0;
 479   1          refresh();
 480   1      }
 481          
 482          void operation6(void)
 483          {
 484   1          char i, length;
 485   1          if (num2 == 0)
 486   1          {
 487   2              sqrt_flag = 0;
 488   2              neg_flag = 0;
C51 COMPILER V9.59.0.0   UC_CALC                                                           11/08/2024 09:46:51 PAGE 9   

 489   2              pos_flag = 1;
 490   2              len = 0;
 491   2              key_last = 0;
 492   2              refresh();
 493   2              return;
 494   2          }
 495   1          sprintf(c_num2, "%f", num2);
 496   1          length = strlen(c_num2);
 497   1          for (i = length - 1; i >= 0; i--)
 498   1          {
 499   2              if (c_num2[i] != '0' && c_num2[i] != '.')
 500   2              {
 501   3                  break;
 502   3              }
 503   2          }
 504   1          if (pos_flag == 1)
 505   1          {
 506   2              num2 -= (c_num2[i] - '0');
 507   2              num2 = num2 / 10;
 508   2          }
 509   1          else
 510   1          {
 511   2              pos_flag /= 10;
 512   2              num2 *= pos_flag;
 513   2              num2 -= (c_num2[i] - '0');
 514   2              num2 /= pos_flag;
 515   2              len--;
 516   2          }
 517   1          refresh();
 518   1      }
 519          
 520          void operation7(void)
 521          {
 522   1          if (neg_flag == 0)
 523   1          {
 524   2              neg_flag = 1;
 525   2          }
 526   1          else
 527   1          {
 528   2              neg_flag = 0;
 529   2          }
 530   1          key_last = 1;
 531   1          refresh();
 532   1      }
 533          
 534          void operation8(void)
 535          {
 536   1          if (sqrt_flag == 0)
 537   1          {
 538   2              sqrt_flag = 1;
 539   2          }
 540   1          else
 541   1          {
 542   2              sqrt_flag = 0;
 543   2          }
 544   1          key_last = 1;
 545   1          refresh();
 546   1      }
 547          
 548          void key(char keynum)
 549          {
 550   1          switch (keynum)
C51 COMPILER V9.59.0.0   UC_CALC                                                           11/08/2024 09:46:51 PAGE 10  

 551   1          {
 552   2              case 4 :
 553   2              case 8 :
 554   2              case 12:
 555   2              case 16:
 556   2              {
 557   3                  if (error == 0)
 558   3                  {
 559   4                      operation1(keynum);
 560   4                  }
 561   3                  break;
 562   3              }
 563   2      
 564   2              case 1  :
 565   2              case 2  :
 566   2              case 3  :
 567   2              case 5  :
 568   2              case 6  :
 569   2              case 7  :
 570   2              case 9  :
 571   2              case 10 :
 572   2              case 11 :
 573   2              case 13 :
 574   2              {
 575   3                  if (error == 0)
 576   3                  {
 577   4                      operation2(keynum);
 578   4                  }
 579   3                  break;
 580   3              }
 581   2      
 582   2              case 14 :
 583   2              {
 584   3                  if (error == 0)
 585   3                  {
 586   4                      operation3();
 587   4                  }
 588   3                  break;
 589   3              }
 590   2      
 591   2              case 15 :
 592   2              {
 593   3                  if (error == 0)
 594   3                  {
 595   4                      operation4();
 596   4                  }
 597   3                  break;
 598   3              }
 599   2      
 600   2              case 17 :
 601   2              {
 602   3                  operation5();
 603   3                  break;
 604   3              }
 605   2      
 606   2              case 18 :
 607   2              {
 608   3                  if (error == 0)
 609   3                  {
 610   4                      operation6();
 611   4                  }
 612   3                  break;
C51 COMPILER V9.59.0.0   UC_CALC                                                           11/08/2024 09:46:51 PAGE 11  

 613   3              }
 614   2      
 615   2              case 19 :
 616   2              {
 617   3                  if (error == 0)
 618   3                  {
 619   4                      operation7();
 620   4                  }
 621   3                  break;
 622   3              }
 623   2      
 624   2              case 20 :
 625   2              {
 626   3                  if (error == 0)
 627   3                  {
 628   4                      operation8();
 629   4                  }
 630   3                  break;
 631   3              }
 632   2          }
 633   1      }
 634          
 635          void main(void)
 636          {
 637   1          InitLcd();
 638   1          DelayMs(15);
 639   1          refresh();
 640   1          while (1)
 641   1          {
 642   2              key(scan());
 643   2          }
 644   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2703    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     48      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
